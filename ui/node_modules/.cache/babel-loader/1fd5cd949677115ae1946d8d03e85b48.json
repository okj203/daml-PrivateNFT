{"ast":null,"code":"var _jsxFileName = \"/Users/cathyjung/Desktop/cathy/daml-PrivateNFT/ui/src/pages/report/Report.tsx\";\nimport React, { useState } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Button from \"@material-ui/core/Button\";\nimport { useStreamQueries, useLedger, useParty } from \"@daml/react\";\n// import { Offer, Token, TokenOffer } from \"@daml.js/daml-nft-0.0.1/lib/Token\"\nimport { Token } from \"\";\nimport { InputDialog } from \"./InputDialog\";\nimport useStyles from \"./styles\";\nexport default function Report() {\n  const classes = useStyles();\n  const party = useParty();\n  const ledger = useLedger();\n  const tokens = useStreamQueries(Token).contracts; // could've been called \"assets\"\n\n  const defaultOfferProps = {\n    open: false,\n    title: \"Offer NFT\",\n    defaultValue: {\n      newOwner: \"\",\n      price: \"\"\n    },\n    fields: {\n      newOwner: {\n        label: \"New Owner\",\n        type: \"text\"\n      },\n      price: {\n        label: \"Offer Price\",\n        type: \"number\"\n      }\n    },\n    onClose: async function () {}\n  };\n  const [offerProps, setOfferProps] = useState(defaultOfferProps); // One can pass the original contracts CreateEvent\n\n  function showOffer(token) {\n    async function onClose(state) {\n      setOfferProps({ ...defaultOfferProps,\n        open: false\n      }); // if you want to use the contracts payload\n\n      if (!state || token.payload.owner === state.newOwner) return;\n      await ledger.exercise(Token.Offer, token.contractId, state);\n    }\n\n    ;\n    setOfferProps({ ...defaultOfferProps,\n      open: true,\n      onClose\n    });\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InputDialog, Object.assign({}, offerProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Table, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    className: classes.tableRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    key: 0,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Issuer\"), /*#__PURE__*/React.createElement(TableCell, {\n    key: 1,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Owner\"), /*#__PURE__*/React.createElement(TableCell, {\n    key: 2,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(TableCell, {\n    key: 3,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Issued\"), /*#__PURE__*/React.createElement(TableCell, {\n    key: 4,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Last Price\"), /*#__PURE__*/React.createElement(TableCell, {\n    key: 5,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Currency\"), /*#__PURE__*/React.createElement(TableCell, {\n    key: 6,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Royalty\"), /*#__PURE__*/React.createElement(TableCell, {\n    key: 7,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Offer\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, tokens.map(t => /*#__PURE__*/React.createElement(TableRow, {\n    key: t.contractId,\n    className: classes.tableRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    key: 0,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, t.payload.issuer), /*#__PURE__*/React.createElement(TableCell, {\n    key: 1,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, t.payload.owner), /*#__PURE__*/React.createElement(TableCell, {\n    key: 2,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, t.payload.description), /*#__PURE__*/React.createElement(TableCell, {\n    key: 3,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, t.payload.issued), /*#__PURE__*/React.createElement(TableCell, {\n    key: 4,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, t.payload.lastPrice), /*#__PURE__*/React.createElement(TableCell, {\n    key: 5,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, t.payload.currency), /*#__PURE__*/React.createElement(TableCell, {\n    key: 6,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, t.payload.royaltyRate), /*#__PURE__*/React.createElement(TableCell, {\n    key: 7,\n    className: classes.tableCellButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    size: \"small\",\n    className: classes.choiceButton,\n    variant: \"contained\",\n    disabled: t.payload.owner !== party,\n    onClick: () => showOffer(t),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"Give\")))))));\n}","map":{"version":3,"sources":["/Users/cathyjung/Desktop/cathy/daml-PrivateNFT/ui/src/pages/report/Report.tsx"],"names":["React","useState","Table","TableHead","TableRow","TableCell","TableBody","Button","useStreamQueries","useLedger","useParty","Token","InputDialog","useStyles","Report","classes","party","ledger","tokens","contracts","defaultOfferProps","open","title","defaultValue","newOwner","price","fields","label","type","onClose","offerProps","setOfferProps","showOffer","token","state","payload","owner","exercise","Offer","contractId","tableRow","tableCell","map","t","issuer","description","issued","lastPrice","currency","royaltyRate","tableCellButton","choiceButton"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Button from \"@material-ui/core/Button\";\nimport Ledger from \"@daml/ledger\";\nimport { useStreamQueries, useLedger, useParty } from \"@daml/react\";\nimport { ContractId } from \"@daml/types\";\n// import { Offer, Token, TokenOffer } from \"@daml.js/daml-nft-0.0.1/lib/Token\"\nimport { Token } from \"\"\nimport { InputDialog, InputDialogProps } from \"./InputDialog\";\nimport useStyles from \"./styles\";\n\nexport default function Report() {\n  const classes = useStyles();\n  const party = useParty();\n  const ledger : Ledger = useLedger();\n  const tokens = useStreamQueries(Token).contracts; // could've been called \"assets\"\n\n  const defaultOfferProps : InputDialogProps<Offer> = {\n    open: false,\n    title: \"Offer NFT\",\n    defaultValue: { \n      newOwner : \"\",\n      price: \"\" \n    },\n    fields: {\n      newOwner : {\n        label: \"New Owner\",\n        type: \"text\"\n      },\n      price: {\n        label: \"Offer Price\",\n        type: \"number\"\n      }\n    },\n    onClose: async function() {}\n  };\n\n  const [ offerProps, setOfferProps ] = useState(defaultOfferProps);\n  // One can pass the original contracts CreateEvent\n  function showOffer(token : Token.CreateEvent) {\n    async function onClose(state : Offer | null) {\n      setOfferProps({ ...defaultOfferProps, open: false});\n      // if you want to use the contracts payload\n      if (!state || token.payload.owner === state.newOwner) return;\n      await ledger.exercise(Token.Offer, token.contractId, state);\n    };\n    setOfferProps({ ...defaultOfferProps, open: true, onClose})\n  };\n\n  return (\n    <>\n      <InputDialog { ...offerProps } />\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow className={classes.tableRow}>\n            <TableCell key={0} className={classes.tableCell}>Issuer</TableCell>\n            <TableCell key={1} className={classes.tableCell}>Owner</TableCell>\n            <TableCell key={2} className={classes.tableCell}>Description</TableCell>\n            <TableCell key={3} className={classes.tableCell}>Issued</TableCell>\n            <TableCell key={4} className={classes.tableCell}>Last Price</TableCell>\n            <TableCell key={5} className={classes.tableCell}>Currency</TableCell>\n            <TableCell key={6} className={classes.tableCell}>Royalty</TableCell>\n            <TableCell key={7} className={classes.tableCell}>Offer</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {tokens.map(t => (\n            <TableRow key={t.contractId} className={classes.tableRow}>\n              <TableCell key={0} className={classes.tableCell}>{t.payload.issuer}</TableCell>\n              <TableCell key={1} className={classes.tableCell}>{t.payload.owner}</TableCell>\n              <TableCell key={2} className={classes.tableCell}>{t.payload.description}</TableCell>\n              <TableCell key={3} className={classes.tableCell}>{t.payload.issued}</TableCell>\n              <TableCell key={4} className={classes.tableCell}>{t.payload.lastPrice}</TableCell>\n              <TableCell key={5} className={classes.tableCell}>{t.payload.currency}</TableCell>\n              <TableCell key={6} className={classes.tableCell}>{t.payload.royaltyRate}</TableCell>\n              <TableCell key={7} className={classes.tableCellButton}>\n                <Button color=\"primary\" size=\"small\" className={classes.choiceButton} variant=\"contained\" disabled={t.payload.owner !== party} onClick={() => showOffer(t)}>Give</Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </>\n  ); \n}\n"]},"metadata":{},"sourceType":"module"}