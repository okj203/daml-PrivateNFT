{"ast":null,"code":"import*as jwt from\"jsonwebtoken\";import partyList from\"./parties.json\";var parties={};partyList.forEach(function(p){return parties[p._1]=p._2;});var names={};partyList.forEach(function(p){return names[p._2]=p._1;});var applicationId=\"daml-nft\";var ledgerId=\"sandbox\";// Unfortunately, the development server of `create-react-app` does not proxy\n// websockets properly. Thus, we need to bypass it and talk to the JSON API\n// directly in development mode.\nexport var wsBaseUrl=\"ws://localhost:7575/\";export var httpBaseUrl=undefined;export var createToken=function createToken(party){return jwt.sign({\"https://daml.com/ledger-api\":{ledgerId:ledgerId,applicationId:applicationId,admin:true,actAs:[party],readAs:[party]}},\"secret\");};export var damlAppKey=applicationId+\".daml.name\";var tokens={};partyList.forEach(function(p){return tokens[p._2]=createToken(p._2);});export function getParty(name){return parties[name]||\"\";}export function getName(party){return names[party]||\"\";}export function getToken(party){return tokens[party]||\"\";}","map":{"version":3,"sources":["/Users/cathyjung/Desktop/cathy/daml-PrivateNFT/ui/src/config.ts"],"names":["jwt","partyList","parties","forEach","p","_1","_2","names","applicationId","ledgerId","wsBaseUrl","httpBaseUrl","undefined","createToken","party","sign","admin","actAs","readAs","damlAppKey","tokens","getParty","name","getName","getToken"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,GAAZ,KAAqB,cAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,gBAAtB,CAEA,GAAMC,CAAAA,OAAa,CAAG,EAAtB,CACAD,SAAS,CAACE,OAAV,CAAkB,SAAAC,CAAC,QAAIF,CAAAA,OAAO,CAACE,CAAC,CAACC,EAAH,CAAP,CAAgBD,CAAC,CAACE,EAAtB,EAAnB,EACA,GAAMC,CAAAA,KAAW,CAAG,EAApB,CACAN,SAAS,CAACE,OAAV,CAAkB,SAAAC,CAAC,QAAIG,CAAAA,KAAK,CAACH,CAAC,CAACE,EAAH,CAAL,CAAcF,CAAC,CAACC,EAApB,EAAnB,EAEA,GAAMG,CAAAA,aAAa,CAAG,UAAtB,CACA,GAAMC,CAAAA,QAAQ,CAAG,SAAjB,CAEA;AACA;AACA;AACA,MAAO,IAAMC,CAAAA,SAAS,CAAG,sBAAlB,CACP,MAAO,IAAMC,CAAAA,WAAW,CAAGC,SAApB,CAEP,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,QAAoBd,CAAAA,GAAG,CAACe,IAAJ,CAAS,CAAE,8BAA+B,CAAEN,QAAQ,CAARA,QAAF,CAAYD,aAAa,CAAbA,aAAZ,CAA2BQ,KAAK,CAAE,IAAlC,CAAwCC,KAAK,CAAE,CAACH,KAAD,CAA/C,CAAwDI,MAAM,CAAE,CAACJ,KAAD,CAAhE,CAAjC,CAAT,CAAuH,QAAvH,CAApB,EAApB,CAEP,MAAO,IAAMK,CAAAA,UAAU,CAAGX,aAAa,CAAG,YAAnC,CAEP,GAAMY,CAAAA,MAAY,CAAG,EAArB,CACAnB,SAAS,CAACE,OAAV,CAAkB,SAAAC,CAAC,QAAIgB,CAAAA,MAAM,CAAChB,CAAC,CAACE,EAAH,CAAN,CAAeO,WAAW,CAACT,CAAC,CAACE,EAAH,CAA9B,EAAnB,EAEA,MAAO,SAASe,CAAAA,QAAT,CAAkBC,IAAlB,CAA0C,CAC/C,MAAQpB,CAAAA,OAAO,CAACoB,IAAD,CAAP,EAAiB,EAAzB,CACD,CAED,MAAO,SAASC,CAAAA,OAAT,CAAiBT,KAAjB,CAA0C,CAC/C,MAAQP,CAAAA,KAAK,CAACO,KAAD,CAAL,EAAgB,EAAxB,CACD,CAED,MAAO,SAASU,CAAAA,QAAT,CAAkBV,KAAlB,CAAkC,CACvC,MAAQM,CAAAA,MAAM,CAACN,KAAD,CAAN,EAAiB,EAAzB,CACD","sourcesContent":["import * as jwt from \"jsonwebtoken\";\nimport partyList from \"./parties.json\";\n\nconst parties : any = {};\npartyList.forEach(p => parties[p._1] = p._2);\nconst names : any = {};\npartyList.forEach(p => names[p._2] = p._1);\n\nconst applicationId = \"daml-nft\";\nconst ledgerId = \"sandbox\";\n\n// Unfortunately, the development server of `create-react-app` does not proxy\n// websockets properly. Thus, we need to bypass it and talk to the JSON API\n// directly in development mode.\nexport const wsBaseUrl = \"ws://localhost:7575/\";\nexport const httpBaseUrl = undefined;\n\nexport const createToken = (party : string) => jwt.sign({ \"https://daml.com/ledger-api\": { ledgerId, applicationId, admin: true, actAs: [party], readAs: [party] } }, \"secret\")\n\nexport const damlAppKey = applicationId + \".daml.name\";\n\nconst tokens : any = {};\npartyList.forEach(p => tokens[p._2] = createToken(p._2));\n\nexport function getParty(name : string) : string {\n  return (parties[name] || \"\") as string;\n}\n\nexport function getName(party : string) : string {\n  return (names[party] || \"\") as string;\n}\n\nexport function getToken(party : string) {\n  return (tokens[party] || \"\") as string;\n}\n"]},"metadata":{},"sourceType":"module"}