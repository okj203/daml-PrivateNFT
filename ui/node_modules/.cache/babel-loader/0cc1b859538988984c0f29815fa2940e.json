{"ast":null,"code":"var _jsxFileName = \"/Users/cathyjung/Desktop/cathy/daml-PrivateNFT/ui/src/context/UserContext.tsx\";\nimport React from \"react\";\nimport { damlAppKey, getParty, getToken } from \"../config\";\nconst UserStateContext = React.createContext({\n  isAuthenticated: false\n});\nconst UserDispatchContext = React.createContext({});\n\nfunction userReducer(state, action) {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      return {\n        isAuthenticated: true,\n        name: action.name,\n        token: action.token,\n        party: action.party\n      };\n\n    case \"LOGIN_FAILURE\":\n      return {\n        isAuthenticated: false\n      };\n\n    case \"SIGN_OUT_SUCCESS\":\n      return {\n        isAuthenticated: false\n      };\n  }\n}\n\nconst UserProvider = ({\n  children\n}) => {\n  const name = localStorage.getItem(damlAppKey) || \"\";\n  const party = getParty(name);\n  const token = getToken(party);\n  let initState = !!party && !!token ? {\n    isAuthenticated: true,\n    name,\n    token,\n    party\n  } : {\n    isAuthenticated: false\n  };\n  const [state, dispatch] = React.useReducer(userReducer, initState);\n  return /*#__PURE__*/React.createElement(UserStateContext.Provider, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(UserDispatchContext.Provider, {\n    value: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nfunction useUserState() {\n  const context = React.useContext(UserStateContext);\n\n  if (context === undefined) {\n    throw new Error(\"useUserState must be used within a UserProvider\");\n  }\n\n  return context;\n}\n\nfunction useUserDispatch() {\n  const context = React.useContext(UserDispatchContext);\n\n  if (context === undefined) {\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\n  }\n\n  return context;\n} // ###########################################################\n\n\nfunction loginUser(dispatch, name, userToken, history, setIsLoading, setError) {\n  setError(false);\n  setIsLoading(true);\n\n  if (!!name) {\n    var party = getParty(name);\n    var token = getToken(party);\n    localStorage.setItem(damlAppKey, name);\n    dispatch({\n      type: \"LOGIN_SUCCESS\",\n      name,\n      token,\n      party\n    });\n    setError(false);\n    setIsLoading(false);\n    history.push(\"/app\");\n  } else {\n    dispatch({\n      type: \"LOGIN_FAILURE\"\n    });\n    setError(true);\n    setIsLoading(false);\n  }\n}\n\nfunction signOut(dispatch, history) {\n  localStorage.removeItem(damlAppKey);\n  dispatch({\n    type: \"SIGN_OUT_SUCCESS\"\n  });\n  history.push(\"/login\");\n}\n\nexport { UserProvider, useUserState, useUserDispatch, loginUser, signOut };","map":{"version":3,"sources":["/Users/cathyjung/Desktop/cathy/daml-PrivateNFT/ui/src/context/UserContext.tsx"],"names":["React","damlAppKey","getParty","getToken","UserStateContext","createContext","isAuthenticated","UserDispatchContext","userReducer","state","action","type","name","token","party","UserProvider","children","localStorage","getItem","initState","dispatch","useReducer","useUserState","context","useContext","undefined","Error","useUserDispatch","loginUser","userToken","history","setIsLoading","setError","setItem","push","signOut","removeItem"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { History } from 'history';\nimport { damlAppKey, getParty, getToken } from \"../config\";\n\ntype AuthenticatedUser = {\n  isAuthenticated : true\n  name : string\n  token : string\n  party : string\n}\n\ntype UnAthenticated = {\n  isAuthenticated : false\n}\n\ntype UserState = UnAthenticated | AuthenticatedUser\n\ntype LoginSuccess = {\n  type : \"LOGIN_SUCCESS\"\n  name : string\n  token : string\n  party : string\n}\n\ntype LoginFailure = {\n  type : \"LOGIN_FAILURE\"\n}\n\ntype SignoutSuccess = {\n  type : \"SIGN_OUT_SUCCESS\"\n}\n\ntype LoginAction = LoginSuccess | LoginFailure | SignoutSuccess\n\nconst UserStateContext = React.createContext<UserState>({ isAuthenticated: false });\nconst UserDispatchContext = React.createContext<React.Dispatch<LoginAction>>({} as React.Dispatch<LoginAction>);\n\nfunction userReducer(state : UserState, action : LoginAction) : UserState {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      return { isAuthenticated: true, name: action.name, token: action.token, party: action.party };\n    case \"LOGIN_FAILURE\":\n      return { isAuthenticated: false };\n    case \"SIGN_OUT_SUCCESS\":\n      return { isAuthenticated: false };\n  }\n}\n\nconst UserProvider : React.FC = ({ children }) => {\n  const name = localStorage.getItem(damlAppKey) || \"\";\n  const party = getParty(name);\n  const token = getToken(party);\n\n  let initState : UserState = (!!party && !!token) ? { isAuthenticated : true, name, token, party } : { isAuthenticated : false };\n  const [state, dispatch] = React.useReducer<React.Reducer<UserState,LoginAction>>(userReducer, initState);\n\n  return (\n    <UserStateContext.Provider value={state}>\n      <UserDispatchContext.Provider value={dispatch}>\n        {children}\n      </UserDispatchContext.Provider>\n    </UserStateContext.Provider>\n  );\n}\n\nfunction useUserState() {\n  const context = React.useContext<UserState>(UserStateContext);\n  if (context === undefined) {\n    throw new Error(\"useUserState must be used within a UserProvider\");\n  }\n  return context;\n}\n\nfunction useUserDispatch() {\n  const context = React.useContext<React.Dispatch<LoginAction>>(UserDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\n  }\n  return context;\n}\n\n\n// ###########################################################\n\nfunction loginUser(\n    dispatch : React.Dispatch<LoginAction>,\n    name : string,\n    userToken : string,\n    history : History,\n    setIsLoading : React.Dispatch<React.SetStateAction<boolean>>,\n    setError : React.Dispatch<React.SetStateAction<boolean>>) {\n  setError(false);\n  setIsLoading(true);\n\n  if (!!name) {\n    var party = getParty(name);\n    var token = getToken(party);\n    localStorage.setItem(damlAppKey, name);\n\n    dispatch({ type: \"LOGIN_SUCCESS\", name, token, party });\n    setError(false);\n    setIsLoading(false);\n    history.push(\"/app\");\n  } else {\n    dispatch({ type: \"LOGIN_FAILURE\" });\n    setError(true);\n    setIsLoading(false);\n  }\n}\n\nfunction signOut(dispatch : React.Dispatch<LoginAction>, history : History) {\n  localStorage.removeItem(damlAppKey);\n\n  dispatch({ type: \"SIGN_OUT_SUCCESS\" });\n  history.push(\"/login\");\n}\n\nexport { UserProvider, useUserState, useUserDispatch, loginUser, signOut };\n"]},"metadata":{},"sourceType":"module"}